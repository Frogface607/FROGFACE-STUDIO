[build]
builder = "NIXPACKS"
buildCommand = "pnpm install --prod=false && echo '=== BUILDING PACKAGES EXPLICITLY ===' && echo '1. api-client...' && cd packages/core/api-client && pnpm build && cd /app && echo '2. knowledge-base (installing deps first)...' && cd packages/core/knowledge-base && pnpm install && pnpm build && cd /app && echo '3. agent-base (installing deps first)...' && cd packages/core/agent-base && pnpm install && pnpm build && cd /app && echo '4. copywriter (installing deps first)...' && cd packages/agents/copywriter && pnpm install && pnpm build && cd /app && echo '5. archivist (installing deps first)...' && cd packages/agents/archivist && pnpm install && pnpm build && cd /app && echo '6. edison-copywriter (installing deps first)...' && cd packages/agents/edison-copywriter && pnpm install && pnpm build && cd /app && echo '7. mcp-server (installing deps first)...' && cd packages/core/mcp-server && pnpm install && pnpm build && cd /app && echo '=== BUILD COMPLETE ===' && echo '=== CHECKING mcp-server ===' && ls -la packages/core/mcp-server/dist/ && echo '=== CHECKING server.js ===' && if test -f packages/core/mcp-server/dist/server.js; then echo '✅✅✅ server.js EXISTS! ✅✅✅'; else echo '❌ server.js NOT FOUND!'; echo 'Files in mcp-server/dist:'; find packages/core/mcp-server/dist -type f 2>/dev/null || echo 'dist directory does not exist'; echo 'All dist directories:'; find packages -type d -name dist 2>/dev/null; echo 'All build outputs:'; find packages -name '*.js' -path '*/dist/*' -type f 2>/dev/null | head -20; exit 1; fi && echo '✅✅✅ READY TO DEPLOY! ✅✅✅'"

[deploy]
startCommand = "cd /app && node packages/core/mcp-server/dist/server.js"
restartPolicyType = "ON_FAILURE"
restartPolicyMaxRetries = 10
