#!/usr/bin/env tsx
/**
 * –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase
 */

import * as dotenv from 'dotenv'
import * as path from 'path'
import { SupabaseKnowledgeAdapter } from '../packages/core/knowledge-base/src/supabase-adapter'

// –ó–∞–≥—Ä—É–∂–∞–µ–º .env.local
dotenv.config({ path: path.join(__dirname, '../.env.local') })

async function main() {
  const url = process.env.SUPABASE_URL
  const serviceKey = process.env.SUPABASE_SERVICE_KEY

  if (!url || !serviceKey) {
    console.error('‚ùå SUPABASE_URL –∏–ª–∏ SUPABASE_SERVICE_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤ .env.local')
    process.exit(1)
  }

  console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É—é –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase...\n')
  console.log(`URL: ${url}\n`)

  const adapter = new SupabaseKnowledgeAdapter({ url, serviceKey })

  // –¢–µ—Å—Ç 1: Ping
  console.log('1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è...')
  const isConnected = await adapter.ping()
  if (isConnected) {
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase —É—Å–ø–µ—à–Ω–æ!\n')
  } else {
    console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Supabase\n')
    process.exit(1)
  }

  // –¢–µ—Å—Ç 2: –î–æ–±–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç
  console.log('2Ô∏è‚É£ –î–æ–±–∞–≤–ª—è—é —Ç–µ—Å—Ç–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç...')
  try {
    const id = await adapter.add(
      '–¢–µ—Å—Ç–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Supabase',
      'test',
      { source: 'test-script', timestamp: new Date().toISOString() }
    )
    console.log(`‚úÖ –≠–ª–µ–º–µ–Ω—Ç –¥–æ–±–∞–≤–ª–µ–Ω! ID: ${id}\n`)
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏:', error)
    process.exit(1)
  }

  // –¢–µ—Å—Ç 3: –ü–æ–∏—Å–∫
  console.log('3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É—é –ø–æ–∏—Å–∫...')
  try {
    const results = await adapter.search('—Ç–µ—Å—Ç–æ–≤—ã–π', 'test', 5)
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${results.length} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤\n`)
    results.forEach((r, idx) => {
      console.log(`${idx + 1}. ${r.content.substring(0, 50)}...`)
      console.log(`   Similarity: ${r.similarity}\n`)
    })
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ:', error)
  }

  // –¢–µ—Å—Ç 4: –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ
  console.log('4Ô∏è‚É£ –ü–æ–ª—É—á–∞—é –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏–∑ namespace "test"...')
  try {
    const all = await adapter.getAll('test')
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${all.length} —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ namespace "test"\n`)
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≤—Å–µ—Ö:', error)
  }

  console.log('‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã! Supabase –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ! üöÄ')
}

main().catch(console.error)

