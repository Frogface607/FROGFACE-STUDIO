import { BaseAgent, Task, AgentResponse } from '../../../core/agent-base/src/index'
import { queryKnowledgeBase } from '../../../core/knowledge-base/src/index'
import { callLLM, AVAILABLE_MODELS } from '../../../core/api-client/src/index'

/**
 * –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –∫–æ–ø–∏—Ä–∞–π—Ç–µ—Ä –¥–ª—è Edison Craft
 * –ü–∏—à–µ—Ç –≤ —Å—Ç–∏–ª–µ Edison Bar –Ω–∞ –æ—Å–Ω–æ–≤–µ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π —Å–æ —Å—Ç–∏–ª—è–º–∏ –∏ —ç—Ç–∞–ª–æ–Ω–∞–º–∏
 */
export class EdisonCopywriterAgent extends BaseAgent {
  name = 'edison-copywriter'
  description = '–ö–æ–ø–∏—Ä–∞–π—Ç–µ—Ä –¥–ª—è Edison Bar: –ø–∏—à–µ—Ç –ø–æ—Å—Ç—ã –∏ –∞–Ω–æ–Ω—Å—ã –≤ —Ñ–∏—Ä–º–µ–Ω–Ω–æ–º —Å—Ç–∏–ª–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ —ç—Ç–∞–ª–æ–Ω–æ–≤'
  knowledgeNamespace = 'copywriter' // –û—Å–Ω–æ–≤–Ω–æ–π namespace, –Ω–æ —Ç–∞–∫–∂–µ –∏—â–µ—Ç –≤ smm

  async execute(task: Task): Promise<AgentResponse> {
    const { prompt, context } = task

    // –ò—â–µ–º –ø—Ä–∏–º–µ—Ä—ã —Å—Ç–∏–ª—è –≤ –æ–±–æ–∏—Ö namespace
    const edisonStyle = await this.getEdisonStyle(prompt)
    
    // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–º–ø—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è Edison —Å—Ç–∏–ª—è
    const systemPrompt = this.createEdisonPrompt(edisonStyle, context)
    
    const fullPrompt = `${systemPrompt}\n\n–ó–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${prompt}`

    try {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º Claude Sonnet
      const result = await this.callLLM(
        fullPrompt,
        AVAILABLE_MODELS.CLAUDE_3_SONNET,
        0.8
      )

      return {
        result,
        metadata: {
          model: 'claude-3-sonnet',
          style: 'edison-craft',
          timestamp: new Date().toISOString(),
          knowledgeUsed: edisonStyle.length,
        },
        sources: ['knowledge_base', 'edison_style_guide'],
      }
    } catch (error) {
      throw new Error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞: ${error instanceof Error ? error.message : 'Unknown error'}`)
    }
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∏–ª—å Edison –∏–∑ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π
   */
  private async getEdisonStyle(query: string) {
    // –ò—â–µ–º –≤ –æ–±–æ–∏—Ö namespace: copywriter –∏ smm
    const [copywriterResults, smmResults] = await Promise.all([
      queryKnowledgeBase(query, 'copywriter', 3),
      queryKnowledgeBase(query, 'smm', 5), // –ë–æ–ª—å—à–µ –∏–∑ smm, —Ç–∞–º —ç—Ç–∞–ª–æ–Ω—ã
    ])

    // –û–±—ä–µ–¥–∏–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã, –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç smm (—Ç–∞–º —ç—Ç–∞–ª–æ–Ω—ã)
    const allResults = [...smmResults, ...copywriterResults]
    
    return allResults
  }

  /**
   * –°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–º–ø—Ç –¥–ª—è Claude –≤ —Å—Ç–∏–ª–µ Edison
   */
  private createEdisonPrompt(
    styleExamples: Array<{ content: string; similarity?: number }>,
    context?: Record<string, unknown>
  ): string {
    const eventType = context?.eventType as string || '–æ–±—â–µ–µ'
    const artist = context?.artist as string || ''
    const date = context?.date as string || ''
    const specialNotes = context?.notes as string || ''

    let prompt = `–¢—ã –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∫–æ–ø–∏—Ä–∞–π—Ç–µ—Ä –¥–ª—è EDISON BAR. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ - —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø–æ—Å—Ç—ã –∏ –∞–Ω–æ–Ω—Å—ã –≤ —Ç–æ—á–Ω–æ–º —Ñ–∏—Ä–º–µ–Ω–Ω–æ–º —Å—Ç–∏–ª–µ Edison Bar.

üìã –û–°–ù–û–í–ù–´–ï –ü–†–ò–ù–¶–ò–ü–´ –°–¢–ò–õ–Ø EDISON:

1. **–û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∫–∞–∂–¥–æ–≥–æ –ø–æ—Å—Ç–∞:**
   - üìÖ –î–∞—Ç–∞: {–î–î.–ú–ú} (–Ω–∞–ø—Ä–∏–º–µ—Ä, 24.09)
   - üïó –°–±–æ—Ä/–ù–∞—á–∞–ª–æ: –≤—Ä–µ–º—è
   - üéü –í—Ö–æ–¥: —Ü–µ–Ω–∞ –∏–ª–∏ "—Å–≤–æ–±–æ–¥–Ω—ã–π"
   - –í –∫–æ–Ω—Ü–µ: "–ë—Ä–æ–Ω—å —Å—Ç–æ–ª–æ–≤: edisonbar.ru" (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ!)

2. **–§—Ä–∞–∑—ã-—Ñ–∏—à–∫–∏ —Å—Ç–∏–ª—è:**
   - "–°–∫–æ—Ä–µ–µ –±—Ä–æ–Ω–∏—Ä—É–π —Å—Ç–æ–ª –Ω–∞ —Å–∞–π—Ç–µ edisonbar.ru –∏ –ø—Ä–∏—Ö–æ–¥–∏!"
   - "–ë—É–¥–µ—Ç –æ–≥–Ω–µ–Ω–Ω–æ!" / "–ù–µ –ø—Ä–æ–ø—É—Å—Ç–∏!"
   - "–ó–æ–≤–∏ –¥—Ä—É–∑–µ–π" / "–°–æ–±–∏—Ä–∞–π –∫–æ–º–ø–∞–Ω–∏—é –¥—Ä—É–∑–µ–π"
   - –î–ª—è –∫–æ–Ω—Ü–µ—Ä—Ç–æ–≤: "–°–±–æ—Ä: 21:00" (–Ω–µ "–ù–∞—á–∞–ª–æ")
   - –î–ª—è –¥–∂–µ–º–æ–≤: "–°–±–æ—Ä: 20:00", "–í—Ö–æ–¥: —Å–≤–æ–±–æ–¥–Ω—ã–π"

3. **–≠–º–æ–¥–∑–∏ –±–ª–æ–∫:**
   –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–π —Ç–∞–∫–æ–π —Ñ–æ—Ä–º–∞—Ç:
   üìÖ –î–∞—Ç–∞: {–¥–∞—Ç–∞}
   üïó –°–±–æ—Ä: {–≤—Ä–µ–º—è}
   üéü –í—Ö–æ–¥: {—Ü–µ–Ω–∞}

4. **–¢–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å:**
   - –î—Ä—É–∂–µ–ª—é–±–Ω–∞—è, –Ω–æ –Ω–µ –ø–∞–Ω–∏–±—Ä–∞—Ç—Å–∫–∞—è
   - –≠–Ω–µ—Ä–≥–∏—á–Ω–∞—è –¥–ª—è –∫–æ–Ω—Ü–µ—Ä—Ç–æ–≤
   - –õ–∞–º–ø–æ–≤–∞—è –¥–ª—è –¥–∂–µ–º–æ–≤
   - –° —ç–º–æ–¥–∑–∏ —É–º–µ—Ä–µ–Ω–Ω–æ (1-2 –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ç–µ–∫—Å—Ç–µ, –±–æ–ª—å—à–µ –≤ –±–ª–æ–∫–µ —Å –¥–∞—Ç–æ–π)

5. **–°—Ç—Ä—É–∫—Ç—É—Ä–∞:**
   - –ó–∞–≥–æ–ª–æ–≤–æ–∫: {–î–ê–¢–ê} | {–ê–†–¢–ò–°–¢/–°–û–ë–´–¢–ò–ï} | EDISON BAR
   - –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç (3-5 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π)
   - –≠–º–æ–¥–∑–∏ –±–ª–æ–∫ —Å –¥–∞—Ç–æ–π/–≤—Ä–µ–º–µ–Ω–µ–º/—Ü–µ–Ω–æ–π
   - "–ë—Ä–æ–Ω—å —Å—Ç–æ–ª–æ–≤: edisonbar.ru"

`

    // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∏–º–µ—Ä—ã –∏–∑ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π
    if (styleExamples.length > 0) {
      prompt += `\nüìö –†–ï–õ–ï–í–ê–ù–¢–ù–´–ï –≠–¢–ê–õ–û–ù–´ –ò –ü–†–ò–ú–ï–†–´ –ò–ó –ë–ê–ó–´ –ó–ù–ê–ù–ò–ô:\n\n`
      
      styleExamples.forEach((example, idx) => {
        // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É –ø—Ä–∏–º–µ—Ä–∞
        const content = example.content.length > 1500 
          ? example.content.substring(0, 1500) + '...'
          : example.content
        
        prompt += `–ü—Ä–∏–º–µ—Ä ${idx + 1}:\n${content}\n\n---\n\n`
      })

      prompt += `‚ö†Ô∏è –í–ê–ñ–ù–û: –ò—Å–ø–æ–ª—å–∑—É–π —ç—Ç–∏ –ø—Ä–∏–º–µ—Ä—ã –∫–∞–∫ –¢–û–ß–ù–´–ô –æ—Ä–∏–µ–Ω—Ç–∏—Ä —Å—Ç–∏–ª—è. –°–ª–µ–¥—É–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ, —Ñ—Ä–∞–∑–∞–º –∏ —Ñ–æ—Ä–º–∞—Ç—É, –Ω–æ –∞–¥–∞–ø—Ç–∏—Ä—É–π –ø–æ–¥ —Ç–µ–∫—É—â–∏–π –∑–∞–ø—Ä–æ—Å.\n\n`
    }

    // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –∑–∞–¥–∞—á–∏
    if (eventType || artist || date) {
      prompt += `\nüìå –ö–û–ù–¢–ï–ö–°–¢ –ó–ê–î–ê–ß–ò:\n`
      if (eventType) prompt += `–¢–∏–ø —Å–æ–±—ã—Ç–∏—è: ${eventType}\n`
      if (artist) prompt += `–ê—Ä—Ç–∏—Å—Ç/–ì—Ä—É–ø–ø–∞: ${artist}\n`
      if (date) prompt += `–î–∞—Ç–∞: ${date}\n`
      if (specialNotes) prompt += `–û—Å–æ–±—ã–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è: ${specialNotes}\n`
    }

    prompt += `\nüéØ –ó–ê–î–ê–ß–ê: –°–æ–∑–¥–∞–π –ø–æ—Å—Ç/–∞–Ω–æ–Ω—Å –≤ —Ç–æ—á–Ω–æ–º —Å—Ç–∏–ª–µ Edison Bar, —Å–ª–µ–¥—É—è –≤—Å–µ–º –ø—Ä–∏–º–µ—Ä–∞–º –∏ –ø—Ä–∏–Ω—Ü–∏–ø–∞–º –≤—ã—à–µ. –í–ï–†–ù–ò –¢–û–õ–¨–ö–û –ì–û–¢–û–í–´–ô –¢–ï–ö–°–¢ –ü–û–°–¢–ê, –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –æ–±—ä—è—Å–Ω–µ–Ω–∏–π.`

    return prompt
  }

  getCapabilities(): string[] {
    return [
      'generate_edison_post',
      'generate_event_announcement',
      'generate_jazz_jam_post',
      'generate_concert_announcement',
      'adapt_to_edison_style',
      'generate_birthday_post',
    ]
  }
}

